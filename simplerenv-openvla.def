Bootstrap: docker
From: nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

%post
    export DEBIAN_FRONTEND=noninteractive

    # Basic setup
    apt-get update && apt-get install -y \
        tzdata \
        wget \
        git \
        curl \
        nano \
        sudo \
        vim \
        net-tools \
        iputils-ping \
        unzip \
        xvfb \
        ca-certificates \
        libcurl4-openssl-dev \
        libglib2.0-0 \
        ffmpeg \
        apt-transport-https \
        gnupg \
        python3 \
        python3-pip

    ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
    dpkg-reconfigure --frontend noninteractive tzdata

    # Vulkan and OpenGL setup
    apt-get install -y --no-install-recommends \
        libvulkan-dev \
        vulkan-tools

    # Install Miniconda
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh
    bash /tmp/miniconda.sh -b -f -p /opt/miniconda
    rm /tmp/miniconda.sh

    # Conda setup
    . /opt/miniconda/etc/profile.d/conda.sh

    # Create conda env
    conda create -n simpler_env python=3.10 -y
    conda activate simpler_env

    # Install SimplerEnv
    cd /opt
    git clone https://github.com/DelinQu/SimplerEnv-OpenVLA SimplerEnv --recurse-submodules
    cd SimplerEnv/ManiSkill2_real2sim
    pip install -e .

    cd ..
    pip install -e .
    pip install -r requirements_full_install.txt

    pip install numpy==1.24.4
    pip install tensorflow==2.15.0
    pip install -r requirements_full_install.txt
    pip install tensorflow[and-cuda]==2.15.1 # tensorflow gpu support

    # Octo setup
    cd /opt
    git clone https://github.com/octo-models/octo/
    cd octo
    git checkout 653c54acde686fde619855f2eac0dd6edad7116b
    pip install -e .

    # OpenVLA setup
    pip install torch==2.2.0 torchvision==0.17.0 timm==0.9.10 transformers==4.40.1 tokenizers==0.19.1 accelerate>=0.25.0
    pip install flash-attn==2.5.5 --no-build-isolation

    # Make sure gymnasium is correct version
    pip install 'gymnasium<1.0'

    # Google Cloud CLI setup
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" > /etc/apt/sources.list.d/google-cloud-sdk.list
    apt-get update && apt-get install -y google-cloud-cli google-cloud-cli-app-engine-java

%files
    # Copy nvidia config files
    /etc/vulkan/icd.d/nvidia_icd.json /usr/share/vulkan/icd.d/nvidia_icd.json
    /etc/vulkan/implicit_layer.d/nvidia_layers.json /usr/share/vulkan/implicit_layer.d/nvidia_layers.json
    /usr/share/glvnd/egl_vendor.d/10_nvidia.json /usr/share/glvnd/egl_vendor.d/10_nvidia.json

%environment
    # set up environment for when using the container

    # Vulkan env vars
    # export VK_ICD_FILENAMES=/etc/vulkan/icd.d/nvidia_icd.json
    # export DISPLAY=""
    # export SAPIEN_HEADLESS=1

    . /opt/miniconda/etc/profile.d/conda.sh
    conda activate simpler_env

%labels
    Author Vishal Sankarram
    Version v1.0

